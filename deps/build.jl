using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libfinufft"], :libfinufft),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/ludvigak/FINUFFTBuilder/releases/download/0.1.1"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.aarch64-linux-gnu.tar.gz", "de5998b7c8df4d772857d1d3684a289b44ab94711415fd6c5812d0c43555b628"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.aarch64-linux-musl.tar.gz", "fe69df13e07912cbf28e528df38bfae355e3779e65e3a480686df5e9dfa31ea5"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.arm-linux-gnueabihf.tar.gz", "fdb145414901075eacfb01cc47c772adaf61191a74d55fc576d5bd1d26dbf053"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.arm-linux-musleabihf.tar.gz", "6dd18ecdf9dccc549205354b398d4d91cb3c73482662a4e924bd548c98bf68e2"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.i686-linux-gnu.tar.gz", "d38679bdd931d098abd7c004a7f2cfcfa59cbee17afff8c901a3e56f1ced9549"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.i686-linux-musl.tar.gz", "a5c5201e463b6bb07ffb4ad0222a73946cd1595e40bfcf5fef5f3ce2602e4baa"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.powerpc64le-linux-gnu.tar.gz", "ff0875fdf283993a5e952355240dee613826fcaded2deecad44fb47b2ef448ff"),
    MacOS(:x86_64) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.x86_64-apple-darwin14.tar.gz", "d8d888fd71e866ba2d8a541737f9fa293efa8531a4738fb34ef26a2ac7ee1219"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.x86_64-linux-gnu.tar.gz", "e103d9c213250c26a6277bf1c49adc62f81fa0e6920b66a2c2d536dfb0eae8af"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.x86_64-linux-musl.tar.gz", "fe92ef0bcebb15a8d140cd6393bf9c95d51e31cebf794d37971bf64667e719d9"),
    FreeBSD(:x86_64) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.x86_64-unknown-freebsd11.1.tar.gz", "f6e02b5ec9769a4d9a60c1f1048d896c60668b55edfe45f62d5623f956290549"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
