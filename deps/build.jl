using BinaryProvider # requires BinaryProvider 0.3.0 or later

# Parse some basic command-line arguments
const verbose = "--verbose" in ARGS
const prefix = Prefix(get([a for a in ARGS if a != "--verbose"], 1, joinpath(@__DIR__, "usr")))
products = [
    LibraryProduct(prefix, ["libfinufft"], :libfinufft),
]

# Download binaries from hosted location
bin_prefix = "https://github.com/ludvigak/FINUFFTBuilder/releases/download/0.1.0"

# Listing of files generated by BinaryBuilder:
download_info = Dict(
    Linux(:aarch64, libc=:glibc) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.aarch64-linux-gnu.tar.gz", "571092f62aa5bbd5324c27dad612639d9ff9013459454306854c39e55680b111"),
    Linux(:aarch64, libc=:musl) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.aarch64-linux-musl.tar.gz", "dbfd580d6fc15209ed1a1ba81e4df38296bae6cef554499a4ae3fed1bf4da0ee"),
    Linux(:armv7l, libc=:glibc, call_abi=:eabihf) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.arm-linux-gnueabihf.tar.gz", "a7ba0770f7cbecbf36a184b7b9e66f55cb8a12f6d19032bec6be39ba681672fd"),
    Linux(:armv7l, libc=:musl, call_abi=:eabihf) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.arm-linux-musleabihf.tar.gz", "ebb64fc08632bd52a3629dfae629255c35257ce8a8a8f3419004ed3da766465a"),
    Linux(:i686, libc=:glibc) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.i686-linux-gnu.tar.gz", "6a52826d66c9a4eab2388c221b389b45e3a324723474b86cabe988aee46dedb4"),
    Linux(:i686, libc=:musl) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.i686-linux-musl.tar.gz", "dc55e9ee1bfce6a27d3226e7a6118b158e893a0d5728356fece63a6e5faf434e"),
    Linux(:powerpc64le, libc=:glibc) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.powerpc64le-linux-gnu.tar.gz", "8b7babf284d458c769eb9871220fc958f7cd5436ac95ec7027403730df2a7785"),
    MacOS(:x86_64) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.x86_64-apple-darwin14.tar.gz", "dc0118b1879b3ce3af7f81baa226a7a46a4b260cc368cd7321ad3acebc7adda0"),
    Linux(:x86_64, libc=:glibc) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.x86_64-linux-gnu.tar.gz", "8e13035f7899390d412f63c1e8c176e00d3c1f800001c236191a2d431e79e865"),
    Linux(:x86_64, libc=:musl) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.x86_64-linux-musl.tar.gz", "5d0b6e16e3f3d22069b50c0701f6becd0cb391cc6e34714be3265a10accb9d79"),
    FreeBSD(:x86_64) => ("$bin_prefix/FINUFFTBuilder.v0.1.0.x86_64-unknown-freebsd11.1.tar.gz", "9c75066edae2af46035868fbb6253ad7c0ea0c8bc8386d37b03f2485e0aac7f6"),
)

# Install unsatisfied or updated dependencies:
unsatisfied = any(!satisfied(p; verbose=verbose) for p in products)
dl_info = choose_download(download_info, platform_key_abi())
if dl_info === nothing && unsatisfied
    # If we don't have a compatible .tar.gz to download, complain.
    # Alternatively, you could attempt to install from a separate provider,
    # build from source or something even more ambitious here.
    error("Your platform (\"$(Sys.MACHINE)\", parsed as \"$(triplet(platform_key_abi()))\") is not supported by this package!")
end

# If we have a download, and we are unsatisfied (or the version we're
# trying to install is not itself installed) then load it up!
if unsatisfied || !isinstalled(dl_info...; prefix=prefix)
    # Download and install binaries
    install(dl_info...; prefix=prefix, force=true, verbose=verbose)
end

# Write out a deps.jl file that will contain mappings for our products
write_deps_file(joinpath(@__DIR__, "deps.jl"), products, verbose=verbose)
